import 'dart:io';
import 'dart:async';

void main() {
  runZoned(() {
    test();
  }, onError: (Object e, StackTrace st) {
    print("zone error $e, stack trace: $st");
  });
}

Future<void> test() async {
  try {
    int socketN = 0;
    Map<Socket, int> sockets = {};
    ServerSocket server = await ServerSocket.bind(InternetAddress.anyIPv4, 9000);
    server.listen((Socket socket) {
      socketN++;
      sockets[socket] = socketN;
      print("Listening:");
      socket.listen((List<int> message) {
        print("[${sockets[socket]}] Got message ${message}");
        socket.add([0, sockets[socket]]+message);
        print("[${sockets[socket]}] Sent message");
      }, onError: (Object e, StackTrace st) {
        print("[${sockets[socket]}] error, $e stack: $st");
      }, onDone: () {
        print("[${sockets[socket]}] Socket done");
        sockets.remove(socket);
        print("[${sockets[socket]}] Socket done: removed");
      }, cancelOnError: true);
    }, onDone: () {
      print("external done");
    }, onError: (Object e, StackTrace st) {
      print("oerror: $e, stack trace: $st");
    });
  } catch (e, st) {
    print("eerror: $e, stack trace: $st");
  }
}
